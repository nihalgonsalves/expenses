/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AuthIndexRouteImport } from './routes/_auth/index'
import { Route as AuthVerifyEmailRouteImport } from './routes/auth/verify-email'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as AuthStatsRouteImport } from './routes/_auth/stats'
import { Route as AuthSheetsIndexRouteImport } from './routes/_auth/sheets/index'
import { Route as AuthGroupsIndexRouteImport } from './routes/_auth/groups/index'
import { Route as AuthSheetsSheetIdRouteImport } from './routes/_auth/sheets/$sheetId'
import { Route as AuthGroupsSheetIdRouteImport } from './routes/_auth/groups/$sheetId'
import { Route as AuthSheetsSheetIdImportRouteImport } from './routes/_auth/sheets/$sheetId.import'

const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthVerifyEmailRoute = AuthVerifyEmailRouteImport.update({
  id: '/auth/verify-email',
  path: '/auth/verify-email',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthStatsRoute = AuthStatsRouteImport.update({
  id: '/stats',
  path: '/stats',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSheetsIndexRoute = AuthSheetsIndexRouteImport.update({
  id: '/sheets/',
  path: '/sheets/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthGroupsIndexRoute = AuthGroupsIndexRouteImport.update({
  id: '/groups/',
  path: '/groups/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSheetsSheetIdRoute = AuthSheetsSheetIdRouteImport.update({
  id: '/sheets/$sheetId',
  path: '/sheets/$sheetId',
  getParentRoute: () => AuthRoute,
} as any)
const AuthGroupsSheetIdRoute = AuthGroupsSheetIdRouteImport.update({
  id: '/groups/$sheetId',
  path: '/groups/$sheetId',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSheetsSheetIdImportRoute = AuthSheetsSheetIdImportRouteImport.update({
  id: '/import',
  path: '/import',
  getParentRoute: () => AuthSheetsSheetIdRoute,
} as any)

export interface FileRoutesByFullPath {
  '/settings': typeof SettingsRoute
  '/stats': typeof AuthStatsRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/': typeof AuthIndexRoute
  '/groups/$sheetId': typeof AuthGroupsSheetIdRoute
  '/sheets/$sheetId': typeof AuthSheetsSheetIdRouteWithChildren
  '/groups': typeof AuthGroupsIndexRoute
  '/sheets': typeof AuthSheetsIndexRoute
  '/sheets/$sheetId/import': typeof AuthSheetsSheetIdImportRoute
}
export interface FileRoutesByTo {
  '/settings': typeof SettingsRoute
  '/stats': typeof AuthStatsRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/': typeof AuthIndexRoute
  '/groups/$sheetId': typeof AuthGroupsSheetIdRoute
  '/sheets/$sheetId': typeof AuthSheetsSheetIdRouteWithChildren
  '/groups': typeof AuthGroupsIndexRoute
  '/sheets': typeof AuthSheetsIndexRoute
  '/sheets/$sheetId/import': typeof AuthSheetsSheetIdImportRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/settings': typeof SettingsRoute
  '/_auth/stats': typeof AuthStatsRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/_auth/': typeof AuthIndexRoute
  '/_auth/groups/$sheetId': typeof AuthGroupsSheetIdRoute
  '/_auth/sheets/$sheetId': typeof AuthSheetsSheetIdRouteWithChildren
  '/_auth/groups/': typeof AuthGroupsIndexRoute
  '/_auth/sheets/': typeof AuthSheetsIndexRoute
  '/_auth/sheets/$sheetId/import': typeof AuthSheetsSheetIdImportRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/settings'
    | '/stats'
    | '/auth/reset-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verify-email'
    | '/'
    | '/groups/$sheetId'
    | '/sheets/$sheetId'
    | '/groups'
    | '/sheets'
    | '/sheets/$sheetId/import'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/settings'
    | '/stats'
    | '/auth/reset-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verify-email'
    | '/'
    | '/groups/$sheetId'
    | '/sheets/$sheetId'
    | '/groups'
    | '/sheets'
    | '/sheets/$sheetId/import'
  id:
    | '__root__'
    | '/_auth'
    | '/settings'
    | '/_auth/stats'
    | '/auth/reset-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verify-email'
    | '/_auth/'
    | '/_auth/groups/$sheetId'
    | '/_auth/sheets/$sheetId'
    | '/_auth/groups/'
    | '/_auth/sheets/'
    | '/_auth/sheets/$sheetId/import'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  SettingsRoute: typeof SettingsRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  AuthVerifyEmailRoute: typeof AuthVerifyEmailRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/verify-email': {
      id: '/auth/verify-email'
      path: '/auth/verify-email'
      fullPath: '/auth/verify-email'
      preLoaderRoute: typeof AuthVerifyEmailRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/stats': {
      id: '/_auth/stats'
      path: '/stats'
      fullPath: '/stats'
      preLoaderRoute: typeof AuthStatsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/sheets/': {
      id: '/_auth/sheets/'
      path: '/sheets'
      fullPath: '/sheets'
      preLoaderRoute: typeof AuthSheetsIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/groups/': {
      id: '/_auth/groups/'
      path: '/groups'
      fullPath: '/groups'
      preLoaderRoute: typeof AuthGroupsIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/sheets/$sheetId': {
      id: '/_auth/sheets/$sheetId'
      path: '/sheets/$sheetId'
      fullPath: '/sheets/$sheetId'
      preLoaderRoute: typeof AuthSheetsSheetIdRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/groups/$sheetId': {
      id: '/_auth/groups/$sheetId'
      path: '/groups/$sheetId'
      fullPath: '/groups/$sheetId'
      preLoaderRoute: typeof AuthGroupsSheetIdRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/sheets/$sheetId/import': {
      id: '/_auth/sheets/$sheetId/import'
      path: '/import'
      fullPath: '/sheets/$sheetId/import'
      preLoaderRoute: typeof AuthSheetsSheetIdImportRouteImport
      parentRoute: typeof AuthSheetsSheetIdRoute
    }
  }
}

interface AuthSheetsSheetIdRouteChildren {
  AuthSheetsSheetIdImportRoute: typeof AuthSheetsSheetIdImportRoute
}

const AuthSheetsSheetIdRouteChildren: AuthSheetsSheetIdRouteChildren = {
  AuthSheetsSheetIdImportRoute: AuthSheetsSheetIdImportRoute,
}

const AuthSheetsSheetIdRouteWithChildren =
  AuthSheetsSheetIdRoute._addFileChildren(AuthSheetsSheetIdRouteChildren)

interface AuthRouteChildren {
  AuthStatsRoute: typeof AuthStatsRoute
  AuthIndexRoute: typeof AuthIndexRoute
  AuthGroupsSheetIdRoute: typeof AuthGroupsSheetIdRoute
  AuthSheetsSheetIdRoute: typeof AuthSheetsSheetIdRouteWithChildren
  AuthGroupsIndexRoute: typeof AuthGroupsIndexRoute
  AuthSheetsIndexRoute: typeof AuthSheetsIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthStatsRoute: AuthStatsRoute,
  AuthIndexRoute: AuthIndexRoute,
  AuthGroupsSheetIdRoute: AuthGroupsSheetIdRoute,
  AuthSheetsSheetIdRoute: AuthSheetsSheetIdRouteWithChildren,
  AuthGroupsIndexRoute: AuthGroupsIndexRoute,
  AuthSheetsIndexRoute: AuthSheetsIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  SettingsRoute: SettingsRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  AuthVerifyEmailRoute: AuthVerifyEmailRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
