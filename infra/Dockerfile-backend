# NODE_VERSION
FROM node:22-slim AS builder

# don't attempt to build Prisma (therefore requiring the schema files) until the
# actual final build stage
ENV SKIP_POSTINSTALL_GENERATE=1

RUN mkdir -p /opt/app
WORKDIR /opt/app

COPY package.json .
COPY ./packages/frontend/package.json ./packages/frontend/
COPY ./packages/backend/package.json ./packages/backend/
COPY ./packages/shared/package.json ./packages/shared/
COPY ./packages/e2e/package.json ./packages/e2e/
COPY ./yarn.lock .
COPY ./.yarnrc.yml ./

RUN corepack enable
# hadolint ignore=DL3060
RUN --mount=type=cache,target=/root/.yarn YARN_CACHE_FOLDER=/root/.yarn yarn install --immutable

COPY ./tsconfig.json ./tsconfig.base.json ./
COPY ./packages/frontend/ ./packages/frontend/
COPY ./packages/backend/ ./packages/backend/
COPY ./packages/shared/ ./packages/shared/
COPY ./packages/e2e/ ./packages/e2e/

ENV NODE_ENV=production

ARG SENTRY_AUTH_TOKEN
ARG SENTRY_ORG
ARG SENTRY_PROJECT

ENV SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN}
ENV SENTRY_ORG=${SENTRY_ORG}
ENV SENTRY_PROJECT=${SENTRY_PROJECT}

RUN yarn be build

# NODE_VERSION
FROM node:22-slim

# "Pin versions in apt-get install"
# hadolint ignore=DL3008
RUN apt-get update -y && \
  apt-get install -y --no-install-recommends \
    ca-certificates openssl \
  && rm -rf /var/lib/apt/lists/*

COPY --from=builder /opt/app/packages/backend/dist /opt/app
WORKDIR /opt/app

COPY --from=builder /opt/app/packages/backend/prisma ./prisma

# install the built package.json from bundle.js
COPY ./.yarnrc.yml ./
RUN corepack enable
# hadolint ignore=DL3060
RUN --mount=type=cache,target=/root/.yarn YARN_CACHE_FOLDER=/root/.yarn yarn install

RUN yarn prisma generate

ENV NODE_ENV=production

USER node

ARG GIT_COMMIT_SHA
ENV GIT_COMMIT_SHA=${GIT_COMMIT_SHA}

CMD ["node", "--enable-source-maps", "/opt/app/app.js"]
